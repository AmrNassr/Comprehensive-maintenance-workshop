/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hany;

import java.awt.ComponentOrientation;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author amnassar
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    LoginForm1 l;
    PreparedStatement pst;
    ResultSet rs;
    public String nameee = null;
    public String typee = null;

    public Calendar cal;
    String dayyy;
    public String oldneww = null;
    public String sectionn = null;
    public String datee;
    private ImageIcon icon;

    public Home(String type, String username, String oldnew, String section) throws IOException, ParseException {
        initComponents();
         icon = new ImageIcon(getClass().getResource("/Image/mechanic.png"));
        this.setIconImage(icon.getImage());
        typee = type;
        nameee = username;
        oldneww = oldnew;
        sectionn = section;
        finish();
        rejected();
        inshop();
        lateunrecev();
        unrecev();

        jMenuBar1.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH) + 1;
        int year = cal.get(Calendar.YEAR);
        int dayy = cal.get(Calendar.DAY_OF_MONTH);
        dayyy = String.valueOf(dayy);
        if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
            dayyy = String.valueOf(dayy);
            dayyy = "0" + dayyy;
        }
        date1.setText(year + "-" + "0" + month + "-" + dayyy);
        datee = date1.getText().toString();

        if (typee.equals("admin")) {
            jMenuItem36.setEnabled(true);
            jButton3.setEnabled(true);
            jMenuItem39.setEnabled(true);
            jMenuItem40.setEnabled(true);
            jMenuItem41.setEnabled(true);
            jMenuItem47.setEnabled(true);
        }
        repaireorder ad = new repaireorder(typee, nameee, oldneww, sectionn);
        jDesktopPane1.add(ad).setVisible(true);

        /*
         if( type2.getText().equals("admin") )
         {
         reportt.setEnabled(true);
         jButton4.setEnabled(true);
         jMenuItem10.setEnabled(true);
         jMenuItem13.setEnabled(true);
         jMenuItem14.setEnabled(true);
         jMenuItem27.setEnabled(true);
         jMenuItem19.setEnabled(true);
         jMenu5.setEnabled(true);
         jMenuItem28.setEnabled(true);
         jMenuItem15.setEnabled(true);
            
           
         }
         if(type2.getText().equals("financial")  )
         { 
         reportt.setEnabled(true);
         }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        notrecev = new javax.swing.JButton();
        inshop = new javax.swing.JButton();
        order = new javax.swing.JButton();
        rejected = new javax.swing.JButton();
        lateunrecev = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jButton3 = new javax.swing.JButton();
        finish = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem38 = new javax.swing.JMenuItem();
        jMenuItem36 = new javax.swing.JMenuItem();
        jMenuItem39 = new javax.swing.JMenuItem();
        jMenuItem47 = new javax.swing.JMenuItem();
        jMenuItem37 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem40 = new javax.swing.JMenuItem();
        jMenuItem41 = new javax.swing.JMenuItem();
        jMenuItem42 = new javax.swing.JMenuItem();
        jMenuItem43 = new javax.swing.JMenuItem();
        jMenuItem44 = new javax.swing.JMenuItem();
        jMenuItem45 = new javax.swing.JMenuItem();
        jMenuItem46 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(17, 39, 37));
        jPanel1.setMaximumSize(new java.awt.Dimension(1240, 790));
        jPanel1.setMinimumSize(new java.awt.Dimension(1240, 790));
        jPanel1.setPreferredSize(new java.awt.Dimension(1240, 790));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        notrecev.setBackground(new java.awt.Color(138, 203, 195));
        notrecev.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        notrecev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/payment-64.png"))); // NOI18N
        notrecev.setText("لم يتم استلامها");
        notrecev.setPreferredSize(new java.awt.Dimension(169, 89));
        notrecev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notrecevActionPerformed(evt);
            }
        });
        jPanel1.add(notrecev, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 220, 240, 70));

        inshop.setBackground(new java.awt.Color(138, 203, 195));
        inshop.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        inshop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/attend00.png"))); // NOI18N
        inshop.setText("داخل الورشة");
        inshop.setPreferredSize(new java.awt.Dimension(169, 89));
        inshop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inshopActionPerformed(evt);
            }
        });
        jPanel1.add(inshop, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 400, 240, 70));

        order.setBackground(new java.awt.Color(138, 203, 195));
        order.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        order.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/attend00.png"))); // NOI18N
        order.setText("طلبات الاصلاح");
        order.setPreferredSize(new java.awt.Dimension(169, 89));
        order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderActionPerformed(evt);
            }
        });
        jPanel1.add(order, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 130, 240, 70));

        rejected.setBackground(new java.awt.Color(138, 203, 195));
        rejected.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rejected.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-blog-search-64.png"))); // NOI18N
        rejected.setText("الطلبات المرفوضة");
        rejected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectedActionPerformed(evt);
            }
        });
        jPanel1.add(rejected, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 490, 240, 70));

        lateunrecev.setBackground(new java.awt.Color(138, 203, 195));
        lateunrecev.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lateunrecev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-blog-search-64.png"))); // NOI18N
        lateunrecev.setText("الطلبات المتاخرة");
        lateunrecev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lateunrecevActionPerformed(evt);
            }
        });
        jPanel1.add(lateunrecev, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 310, 240, 70));

        jDesktopPane1.setPreferredSize(new java.awt.Dimension(980, 750));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        jPanel1.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 970, 640));

        jButton3.setBackground(new java.awt.Color(138, 203, 195));
        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/student-100.png"))); // NOI18N
        jButton3.setText("اضافة معدة");
        jButton3.setEnabled(false);
        jButton3.setPreferredSize(new java.awt.Dimension(169, 89));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 40, 240, 70));

        finish.setBackground(new java.awt.Color(138, 203, 195));
        finish.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        finish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-blog-search-64.png"))); // NOI18N
        finish.setText("استلام نهائي");
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });
        jPanel1.add(finish, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 580, 240, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/images.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.setMaximumSize(new java.awt.Dimension(1240, 790));
        jLabel2.setMinimumSize(new java.awt.Dimension(1240, 790));
        jLabel2.setPreferredSize(new java.awt.Dimension(1240, 790));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1240, 720));

        date1.setText("jLabel1");
        jPanel1.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 20, -1, -1));

        jMenuBar1.setBackground(new java.awt.Color(122, 134, 162));

        jMenu1.setText("الرئيسية");
        jMenu1.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem38.setText("الطلبات المكتملة");
        jMenuItem38.setActionCommand("");
        jMenuItem38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem38ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem38);

        jMenuItem36.setText("اضافة مستخدم");
        jMenuItem36.setActionCommand("");
        jMenuItem36.setEnabled(false);
        jMenuItem36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem36ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem36);

        jMenuItem39.setText("تعديل كلمة السر");
        jMenuItem39.setActionCommand("");
        jMenuItem39.setEnabled(false);
        jMenuItem39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem39ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem39);

        jMenuItem47.setText("طلبات الاصلاح");
        jMenuItem47.setActionCommand("");
        jMenuItem47.setEnabled(false);
        jMenuItem47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem47ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem47);

        jMenuItem37.setText("الرئيسية");
        jMenuItem37.setActionCommand("");
        jMenuItem37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem37ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem37);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("تقارير");
        jMenu2.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem40.setText("المستخدمين");
        jMenuItem40.setActionCommand("");
        jMenuItem40.setEnabled(false);
        jMenuItem40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem40ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem40);

        jMenuItem41.setText("حصر المعدات");
        jMenuItem41.setActionCommand("");
        jMenuItem41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem41ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem41);

        jMenuItem42.setText("ايام التوقف لجميع المعدات");
        jMenuItem42.setActionCommand("");
        jMenuItem42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem42ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem42);

        jMenuItem43.setText("بيان اصلاحات معدة");
        jMenuItem43.setActionCommand("");
        jMenuItem43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem43ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem43);

        jMenuItem44.setText("جميع المعدات الموجودة داخل ورشة");
        jMenuItem44.setActionCommand("");
        jMenuItem44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem44ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem44);

        jMenuItem45.setText("بيان نوع الاصلاح");
        jMenuItem45.setActionCommand("");
        jMenuItem45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem45ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem45);

        jMenuItem46.setText("طباعة طلب اصلاح");
        jMenuItem46.setActionCommand("");
        jMenuItem46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem46ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem46);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1240, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          try {
         jDesktopPane1.removeAll();
         item addd = new item(typee);
         jDesktopPane1.add(addd).setVisible(true);
         }
         catch(Exception e)
         {
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void notrecevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notrecevActionPerformed
        try {
            jDesktopPane1.removeAll();
            follow addd = new follow(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_notrecevActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderActionPerformed
        try {
            jDesktopPane1.removeAll();
            repaireorder addd = new repaireorder(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_orderActionPerformed

    private void lateunrecevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lateunrecevActionPerformed

        try {
            jDesktopPane1.removeAll();
            norespond addd = new norespond(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (Exception e) {
        }

    }//GEN-LAST:event_lateunrecevActionPerformed

    private void rejectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectedActionPerformed
        try {
            jDesktopPane1.removeAll();
            rejected1 addd = new rejected1(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rejectedActionPerformed

    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
        try {
            jDesktopPane1.removeAll();
            complete addd = new complete(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_finishActionPerformed

    private void inshopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inshopActionPerformed
        try {
            jDesktopPane1.removeAll();
            inshop addd = new inshop(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_inshopActionPerformed

    private void jMenuItem36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem36ActionPerformed
        jDesktopPane1.removeAll();
        adduser1 addd = new adduser1();
        jDesktopPane1.add(addd).setVisible(true);

    }//GEN-LAST:event_jMenuItem36ActionPerformed

    private void jMenuItem37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem37ActionPerformed
        try {
            new MainPage1(typee, nameee, oldneww, sectionn).setVisible(true);
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(Home2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem37ActionPerformed

    private void jMenuItem38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem38ActionPerformed
        try {
            jDesktopPane1.removeAll();
            done addd = new done(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem38ActionPerformed

    private void jMenuItem39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem39ActionPerformed
        try {
            editpassword m = new editpassword();
            m.setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem39ActionPerformed

    private void jMenuItem40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem40ActionPerformed
        InputStream in = null;
        try {

            in = this.getClass().getResourceAsStream("/reports/users.jasper");
            Map<String, Object> para = new HashMap<String, Object>();
            JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.appcon);
            JasperViewer.viewReport(j, false);
        } catch (JRException ex) {

            JOptionPane.showMessageDialog(null, ex);
        } finally {
        }
    }//GEN-LAST:event_jMenuItem40ActionPerformed

    private void jMenuItem41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem41ActionPerformed
        InputStream in = null;
        try {

            in = this.getClass().getResourceAsStream("/reports/equipment.jasper");
            Map<String, Object> para = new HashMap<String, Object>();
            JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.appcon);
            JasperViewer.viewReport(j, false);
        } catch (JRException ex) {

            JOptionPane.showMessageDialog(null, ex);
        } finally {
        }
    }//GEN-LAST:event_jMenuItem41ActionPerformed

    private void jMenuItem42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem42ActionPerformed
        numberofdays m = new numberofdays(oldneww);
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem42ActionPerformed

    private void jMenuItem43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem43ActionPerformed
        repaireorderdetails m = new repaireorderdetails();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem43ActionPerformed

    private void jMenuItem44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem44ActionPerformed

        if (oldneww.equals("-")) {
            InputStream in = null;
            try {

                in = this.getClass().getResourceAsStream("/reports/inshop1.jasper");
                Map<String, Object> para = new HashMap<String, Object>();
                para.put("oldnew", oldneww);
                JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.appcon);
                JasperViewer.viewReport(j, false);
            } catch (JRException ex) {

                JOptionPane.showMessageDialog(null, ex);
            } finally {
            }
        } else {
            InputStream in = null;
            try {

                in = this.getClass().getResourceAsStream("/reports/inshop.jasper");
                Map<String, Object> para = new HashMap<String, Object>();
                para.put("oldnew", oldneww);
                JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.appcon);
                JasperViewer.viewReport(j, false);
            } catch (JRException ex) {

                JOptionPane.showMessageDialog(null, ex);
            } finally {
            }
        }

    }//GEN-LAST:event_jMenuItem44ActionPerformed

    private void jMenuItem45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem45ActionPerformed
        bytype m = new bytype(oldneww);
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem45ActionPerformed

    private void jMenuItem46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem46ActionPerformed
        printdoc m = new printdoc();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem46ActionPerformed

    private void jMenuItem47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem47ActionPerformed
        try {
            jDesktopPane1.removeAll();
            all addd = new all(typee, nameee, oldneww, sectionn);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem47ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel date1;
    public javax.swing.JButton finish;
    public javax.swing.JButton inshop;
    public javax.swing.JButton jButton3;
    public javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem36;
    private javax.swing.JMenuItem jMenuItem37;
    private javax.swing.JMenuItem jMenuItem38;
    private javax.swing.JMenuItem jMenuItem39;
    private javax.swing.JMenuItem jMenuItem40;
    private javax.swing.JMenuItem jMenuItem41;
    private javax.swing.JMenuItem jMenuItem42;
    private javax.swing.JMenuItem jMenuItem43;
    private javax.swing.JMenuItem jMenuItem44;
    private javax.swing.JMenuItem jMenuItem45;
    private javax.swing.JMenuItem jMenuItem46;
    private javax.swing.JMenuItem jMenuItem47;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JButton lateunrecev;
    public javax.swing.JButton notrecev;
    public javax.swing.JButton order;
    public javax.swing.JButton rejected;
    // End of variables declaration//GEN-END:variables

    public void unrecev() {
        if (typee.equals("admin")) {
            try {

                String sqll = "SELECT count(seriall) as x  FROM karem.repaireorder  where( statuss in ('resend','draft') )  order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {
                    notrecev.setText(notrecev.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {

                String sqll = "SELECT count(seriall) as x  FROM karem.repaireorder  where( statuss in ('resend','draft') ) and username = '" + nameee + "' order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {
                    notrecev.setText(notrecev.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void lateunrecev() {
        if (typee.equals("admin")) {
            try {
                String sqll = "SELECT count(seriall) as x FROM karem.repaireorder where statuss in ('draft' , 'resend') and datee not in "
                        + "(select  datee FROM karem.repaireorder where  datee between DATE_ADD('" + datee + "', INTERVAL -2 DAY) and '" + datee + "')  order by id ";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {
                    lateunrecev.setText(lateunrecev.getText() + " ( " + rs.getString("x") + " )");

                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                String sqll = "SELECT count(seriall) as x FROM karem.repaireorder where statuss in ('draft' , 'resend') and datee not in "
                        + "(select  datee FROM karem.repaireorder where  datee between DATE_ADD('" + datee + "', INTERVAL -2 DAY) and '" + datee + "') "
                        + "and username='" + nameee + "' order by id ";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {
                    lateunrecev.setText(lateunrecev.getText() + " ( " + rs.getString("x") + " )");

                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void inshop() {
        if (typee.equals("admin")) {
            try {
                String sqll = "SELECT count(seriall) as x FROM karem.repaireorder  where statuss = 'underconstruction'  order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {

                    inshop.setText(inshop.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                String sqll = "SELECT count(seriall) as x FROM karem.repaireorder  where statuss = 'underconstruction' and username = '" + nameee + "' order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {

                    inshop.setText(inshop.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void rejected() {
        if (typee.equals("admin")) {
            try {
                String sqll = "SELECT count(seriall) as x FROM karem.repaireorder  where statuss = 'rejected'   order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {

                    rejected.setText(rejected.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                String sqll = "SELECT count(seriall) as x FROM karem.repaireorder  where statuss = 'rejected'  and username ='" + nameee + "' order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {

                    rejected.setText(rejected.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void finish() {
        if (typee.equals("admin")) {
            try {
                String sqll = "SELECT count(seriall) as x  FROM karem.repaireorder  where statuss = 'finished'   order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {
                    finish.setText(finish.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                String sqll = "SELECT count(seriall) as x  FROM karem.repaireorder  where statuss = 'finished'  and username ='" + nameee + "' order by id";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                rs = pst.executeQuery();
                if (rs.next()) {
                    finish.setText(finish.getText() + " ( " + rs.getString("x") + " )");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
