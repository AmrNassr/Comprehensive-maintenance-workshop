/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hany;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.year;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author amnassar
 */
public final class repaireorder extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
    PreparedStatement pst;
    ResultSet rs;
    public String y;
    public String check;
    public String datee;
    public String fulldatee;
    public Calendar cal;
    public String pphone1;
    public String pphone2;
    public String ppp2;
    public String ppp1;
    public String ttt1;
    public String ttt2;
    String dayyy;
    public String usernamee = null;
    public String typee = null;
    public String oldneww = null;
    public String sectionn = null;
    ButtonGroup G;
    public String fulll;
    
    public repaireorder(String type, String username, String oldnew, String section) throws ParseException {
        initComponents();
        typee = type;
        usernamee = username;
        oldneww = oldnew;
        sectionn = section;
        clear();
        AutoCompleteDecorator.decorate(cmcode);
        
        if (typee.equals("admin")) {
            cmsection.setEnabled(true);
            
        }
        cmsection.setSelectedItem(sectionn);
        
        cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH) + 1;
        int year = cal.get(Calendar.YEAR);
        int dayy = cal.get(Calendar.DAY_OF_MONTH);
        dayyy = String.valueOf(dayy);
        if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
            dayyy = String.valueOf(dayy);
            dayyy = "0" + dayyy;
        }
        date1.setText(year + "-" + "0" + month + "-" + dayyy);
        datee = date1.getText().toString();
        TimeZone tz = TimeZone.getTimeZone("GMT+02");
        Calendar c = Calendar.getInstance(tz);
        String time = String.format("%02d", c.get(Calendar.HOUR_OF_DAY)) + ":"
                + String.format("%02d", c.get(Calendar.MINUTE));
        fulldatee = datee + " " + time;
        
        G = new ButtonGroup();
        G.add(full);
        G.add(part);
        part.setSelected(true);
        
        expected.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        
        details.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        hour = new javax.swing.JTextField();
        afsha = new javax.swing.JCheckBox();
        framel = new javax.swing.JCheckBox();
        mohrk = new javax.swing.JCheckBox();
        hydrolek = new javax.swing.JCheckBox();
        khrba = new javax.swing.JCheckBox();
        smkra = new javax.swing.JCheckBox();
        dhanat = new javax.swing.JCheckBox();
        hwa = new javax.swing.JCheckBox();
        redater = new javax.swing.JCheckBox();
        sroge = new javax.swing.JCheckBox();
        zogag = new javax.swing.JCheckBox();
        fhs = new javax.swing.JCheckBox();
        jLabel34 = new javax.swing.JLabel();
        jkman = new javax.swing.JCheckBox();
        zyot = new javax.swing.JCheckBox();
        filter = new javax.swing.JCheckBox();
        tshem = new javax.swing.JCheckBox();
        wire = new javax.swing.JCheckBox();
        jLabel36 = new javax.swing.JLabel();
        etarat = new javax.swing.JCheckBox();
        full = new javax.swing.JRadioButton();
        part = new javax.swing.JRadioButton();
        jLabel35 = new javax.swing.JLabel();
        serial = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        cmsection = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expected = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        details = new javax.swing.JTextArea();
        name = new javax.swing.JTextField();
        typeee = new javax.swing.JTextField();
        cmcode = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        serialid = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        date1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel10.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hour.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        hour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel10.add(hour, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 90, 30));

        afsha.setBackground(new java.awt.Color(138, 203, 195));
        afsha.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        afsha.setText("عفشة");
        jPanel10.add(afsha, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 180, 80, -1));

        framel.setBackground(new java.awt.Color(138, 203, 195));
        framel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        framel.setText("فرامل");
        jPanel10.add(framel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 180, 90, -1));

        mohrk.setBackground(new java.awt.Color(138, 203, 195));
        mohrk.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        mohrk.setText("محرك");
        jPanel10.add(mohrk, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 180, 70, -1));

        hydrolek.setBackground(new java.awt.Color(138, 203, 195));
        hydrolek.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        hydrolek.setText("هيدروليك");
        jPanel10.add(hydrolek, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 110, -1));

        khrba.setBackground(new java.awt.Color(138, 203, 195));
        khrba.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        khrba.setText("كهرباء");
        jPanel10.add(khrba, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 80, -1));

        smkra.setBackground(new java.awt.Color(138, 203, 195));
        smkra.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        smkra.setText("سمكرة");
        jPanel10.add(smkra, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 80, -1));

        dhanat.setBackground(new java.awt.Color(138, 203, 195));
        dhanat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        dhanat.setText("دهانات");
        jPanel10.add(dhanat, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 80, -1));

        hwa.setBackground(new java.awt.Color(138, 203, 195));
        hwa.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        hwa.setText("دائرة هواء");
        jPanel10.add(hwa, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 90, -1));

        redater.setBackground(new java.awt.Color(138, 203, 195));
        redater.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        redater.setText("ريداتير");
        jPanel10.add(redater, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, 80, -1));

        sroge.setBackground(new java.awt.Color(138, 203, 195));
        sroge.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        sroge.setText("سروجي");
        jPanel10.add(sroge, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 90, -1));

        zogag.setBackground(new java.awt.Color(138, 203, 195));
        zogag.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        zogag.setText("زجاج");
        jPanel10.add(zogag, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 70, -1));

        fhs.setBackground(new java.awt.Color(138, 203, 195));
        fhs.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        fhs.setText("فحص شهري");
        jPanel10.add(fhs, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 110, -1));

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        jLabel34.setText("الاسباب المتوقعة");
        jPanel10.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 150, 30));

        jkman.setBackground(new java.awt.Color(138, 203, 195));
        jkman.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jkman.setText("جكمان");
        jPanel10.add(jkman, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, 80, -1));

        zyot.setBackground(new java.awt.Color(138, 203, 195));
        zyot.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        zyot.setText("زيوت");
        jPanel10.add(zyot, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 80, -1));

        filter.setBackground(new java.awt.Color(138, 203, 195));
        filter.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        filter.setText("فلتر");
        jPanel10.add(filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 70, -1));

        tshem.setBackground(new java.awt.Color(138, 203, 195));
        tshem.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tshem.setText("تشحيم");
        jPanel10.add(tshem, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 80, -1));

        wire.setBackground(new java.awt.Color(138, 203, 195));
        wire.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        wire.setText("واير");
        jPanel10.add(wire, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 70, -1));

        jLabel36.setBackground(new java.awt.Color(255, 255, 255));
        jLabel36.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel36.setText("عدد الساعات");
        jPanel10.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 170, 30));

        etarat.setBackground(new java.awt.Color(138, 203, 195));
        etarat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etarat.setText("اطارات");
        etarat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etaratActionPerformed(evt);
            }
        });
        jPanel10.add(etarat, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 260, 80, -1));

        full.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        full.setText("اصلاح شامل");
        full.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullActionPerformed(evt);
            }
        });
        jPanel10.add(full, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, -1, -1));

        part.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        part.setText("جزئي");
        part.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partActionPerformed(evt);
            }
        });
        jPanel10.add(part, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, -1, -1));

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        jLabel35.setText("تفاصيل العطل");
        jPanel10.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, 150, 30));

        serial.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        serial.setText("Serial");
        jPanel10.add(serial, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 230, 40));

        save.setBackground(new java.awt.Color(138, 203, 195));
        save.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        save.setText("حفظ");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel10.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 530, 140, 70));

        jLabel33.setBackground(new java.awt.Color(255, 255, 255));
        jLabel33.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel33.setText("الادارة");
        jPanel10.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, 120, 40));

        cmsection.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        cmsection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PSS", "URD", "LSD", "FSD", "TRS", "QD", "Call Centre", "ITD", "HR", "DRD", "WHD", "CD", "Slag" }));
        cmsection.setEnabled(false);
        cmsection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmsectionActionPerformed(evt);
            }
        });
        cmsection.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmsectionKeyPressed(evt);
            }
        });
        jPanel10.add(cmsection, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 40, 150, 40));

        jLabel32.setBackground(new java.awt.Color(255, 255, 255));
        jLabel32.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel32.setText("كود المعدة");
        jPanel10.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 90, 140, 30));

        expected.setColumns(20);
        expected.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        expected.setRows(5);
        jScrollPane1.setViewportView(expected);

        jPanel10.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 370, 90));

        details.setColumns(20);
        details.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        details.setRows(5);
        jScrollPane2.setViewportView(details);

        jPanel10.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 350, 400, 160));

        name.setEditable(false);
        name.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel10.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 380, 30));

        typeee.setEditable(false);
        typeee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        typeee.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel10.add(typeee, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 130, 30));

        cmcode.setEditable(true);
        cmcode.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cmcode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cmcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmcodeActionPerformed(evt);
            }
        });
        jPanel10.add(cmcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 150, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 720));

        serialid.setText("jLabel1");
        jPanel10.add(serialid, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        code.setEditable(false);
        code.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        code.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel10.add(code, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 630, 100, 30));

        date1.setText("date");
        jPanel10.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        try {
             String namee = name.getText().toString();
                String typee = typeee.getText();
                String codee = cmcode.getSelectedItem().toString();
                String section = cmsection.getSelectedItem().toString();
            String sql = "SELECT code  FROM karem.item where  section='"+section+"' and code NOT IN \n" +
                    "(SELECT distinct codee FROM karem.repaireorder where section='"+section+"' and statuss !='done' order by id DESC)  and code='"+cmcode.getSelectedItem().toString()+"'";
            pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                auto_id();
               
                String kind = "جزئي";
                String afshaa = "No";
                String framell = "No";
                String mohrkk = "No";
                String hydrolekk = "No";
                String khrbaa = "No";
                String smkraa = "No";
                String dhanatt = "No";
                String hwaa = "No";
                String redaterr = "No";
                String srogee = "No";
                String zogagg = "No";
                String fhss = "No";
                String filterr = "No";
                String jkmann = "No";
                String zyott = "No";
                String tshemm = "No";
                String wiree = "No";
                String etaratt = "No";
                String detailss = details.getText();
                String expectedd = expected.getText();
                String seriall = serial.getText();
                String hourr = hour.getText();
                fulll = "";
                
                if (full.isSelected()) {
                    kind = "اصلاح شامل";
                    fulll = fulll + "اصلاح شامل ";
                }
                if (afsha.isSelected()) {
                    afshaa = "Yes";
                    fulll = fulll + "عفشة ";
                }
                if (framel.isSelected()) {
                    framell = "Yes";
                    fulll = fulll + "فرامل ";
                }
                if (mohrk.isSelected()) {
                    mohrkk = "Yes";
                    fulll = fulll + "محرك ";
                }
                if (hydrolek.isSelected()) {
                    hydrolekk = "Yes";
                    fulll = fulll + "هيدروليك ";
                }
                if (filter.isSelected()) {
                    filterr = "Yes";
                    fulll = fulll + "فلتر ";
                }
                if (khrba.isSelected()) {
                    khrbaa = "Yes";
                    fulll = fulll + "كهربة ";
                }
                if (smkra.isSelected()) {
                    smkraa = "Yes";
                    fulll = fulll + "سمكرة ";
                }
                if (dhanat.isSelected()) {
                    dhanatt = "Yes";
                    fulll = fulll + "دهانات ";
                }
                if (hwa.isSelected()) {
                    hwaa = "Yes";
                    fulll = fulll + "دائرة هواء ";
                }
                if (redater.isSelected()) {
                    redaterr = "Yes";
                    fulll = fulll + "ريداتير ";
                }
                if (sroge.isSelected()) {
                    srogee = "Yes";
                    fulll = fulll + "سروجي ";
                }
                if (zogag.isSelected()) {
                    zogagg = "Yes";
                    fulll = fulll + "زجاج ";
                }
                if (fhs.isSelected()) {
                    fhss = "Yes";
                    fulll = fulll + "فحص شهري ";
                }
                if (jkman.isSelected()) {
                    jkmann = "Yes";
                    fulll = fulll + "جكمان ";
                }
                if (zyot.isSelected()) {
                    zyott = "Yes";
                    fulll = fulll + "زيوت ";
                }                
                if (tshem.isSelected()) {
                    tshemm = "Yes";
                    fulll = fulll + "تشحيم ";
                }
                if (wire.isSelected()) {
                    wiree = "Yes";
                    fulll = fulll + "واير ";
                }                
                if (etarat.isSelected()) {
                    etaratt = "Yes";
                    fulll = fulll + "اطارات ";
                }
                if (!cmcode.getSelectedItem().toString().trim().isEmpty() && !details.getText().trim().isEmpty() && !fulll.trim().isEmpty() ) {
                    try {
                        
                        String sqll = "SELECT code  FROM karem.item where  section='" + cmsection.getSelectedItem() + "' and name NOT IN "
                                + "(SELECT distinct codee FROM karem.repaireorder where   statuss"
                                + " !='done' order by id DESC) and section ='" + cmsection.getSelectedItem().toString() + "' and item.code ='"+cmcode.getSelectedItem().toString()+"' order by name";
                        pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                        rs = pst.executeQuery();
                        if(rs.next())
                        {
                            
                            String sqld= "INSERT INTO karem.repaireorder (hour,eqname,typee,section,codee,seriall,datee,fulldate,statuss,details,expected,afhsa,framel"
                                    + ",mohrk,hydrolek,khrba,smkra,dhanat,hwa,redater,sroge,zogag,fhs,jkman,zyot,tshem,wire,etarat,kind,username,full,filter)"
                                    + " VALUES ('" + hourr + "','" + namee + "','" + typee + "','" + section + "','" + codee + "','" + seriall + "','" + datee + "','" + fulldatee + "','draft','" + detailss + "','" + expectedd + "',"
                                    + "'" + afshaa + "','" + framell + "','" + mohrkk + "','" + hydrolekk + "','" + khrbaa + "','" + smkraa + "','" + dhanatt + "','" + hwaa + "','" + redaterr + "','" + srogee + "','" + zogagg + "','" + fhss + "'"
                                    + ",'" + jkmann + "','" + zyott + "','" + tshemm + "','" + wiree + "','" + etaratt + "','" + kind + "','" + usernamee + "','" + fulll + "','"+filterr+"')";
                            pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqld);
                            pst.execute();
                            String sql1 = "INSERT INTO karem.logs (hour,eqname,typee,section,codee,seriall,datee,fulldate,statuss,details,expected,afhsa,framel"
                                    + ",mohrk,hydrolek,khrba,smkra,dhanat,hwa,redater,sroge,zogag,fhs,jkman,zyot,tshem,wire,etarat,kind,username,full,filter)"
                                    + " VALUES ('" + hourr + "','" + namee + "','" + typee + "','" + section + "','" + codee + "','" + seriall + "','" + datee + "','" + fulldatee + "','draft','" + detailss + "','" + expectedd + "',"
                                    + "'" + afshaa + "','" + framell + "','" + mohrkk + "','" + hydrolekk + "','" + khrbaa + "','" + smkraa + "','" + dhanatt + "','" + hwaa + "','" + redaterr + "','" + srogee + "','" + zogagg + "','" + fhss + "'"
                                    + ",'" + jkmann + "','" + zyott + "','" + tshemm + "','" + wiree + "','" + etaratt + "','" + kind + "','" + usernamee + "','" + fulll + "','"+filterr+"')";
                            pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sql1);
                            pst.execute();
                            JOptionPane.showMessageDialog(rootPane, "تم تسجيل امر الاصلاح بنجاح");
                            InputStream in=null;
                            try {
                                
                                in = this.getClass().getResourceAsStream("/reports/report.jasper");
                                Map<String,Object> para = new HashMap<String,Object>();
                                para.put("serial",seriall );
                                para.put("date",fulldatee );
                                
                                JasperPrint j = JasperFillManager.fillReport(in, para,DBConnect.appcon);
                                JasperViewer.viewReport(j,false);
                            }
                            catch (JRException ex) {
                            } finally {
                            }
                            cmcode.removeItem(codee);
                            clear();
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "من فضلك اختر المعدة ");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(repaireorder.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "من فضلك اختر المعدة و ادخل تفاصيل العطل");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "المعدة غير موجودة او مستخدمة");
            }
        } catch (SQLException ex) {
            Logger.getLogger(repaireorder.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        

    }//GEN-LAST:event_saveActionPerformed

    private void cmcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmcodeActionPerformed
        try {
            Object obj = evt.getSource();
            if (obj == cmcode) {
                if (cmcode.getSelectedItem().toString().trim().isEmpty()) {
                } else {
                    try {
                        String sql = "SELECT *  FROM karem.item where code='" + cmcode.getSelectedItem().toString() + "'";
                        pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sql);
                        rs = pst.executeQuery();
                        if (rs.next()) {
                            code.setText(rs.getString("section"));
                            typeee.setText(rs.getString("type"));
                            name.setText(rs.getString("name"));
                        }
                        auto_id();
                    } catch (SQLException ex) {
                        
                    }
                    
                }
            }
        } catch (Exception ex) {
            
        }
    }//GEN-LAST:event_cmcodeActionPerformed

    private void cmsectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmsectionActionPerformed
        Object obj = evt.getSource();
        if (obj == cmsection) {
            if(typee.equals("admin"))
            {
                
            try {
                String sqll = "SELECT code  FROM karem.item ";
                
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                
                rs = pst.executeQuery();
                
                while (rs.next()) {
                    
                    String name = rs.getString("code");
                    
                    cmcode.removeItem(name);
                }
            } catch (SQLException ex) {
            }
            try {
                String sql = "SELECT code  FROM karem.item where  section='"+cmsection.getSelectedItem()+"' and code NOT IN \n" +
"(SELECT distinct codee FROM karem.repaireorder where section='"+cmsection.getSelectedItem()+"' and statuss !='done' order by id DESC)";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sql);
                rs = pst.executeQuery();
                while (rs.next()) {
                    String namee = rs.getString("code");
                    
                    cmcode.addItem(namee);
                    
                }
                
            } catch (SQLException ex) {
                
            }
            }
            else
            {
            try {
                String sqll = "SELECT code  FROM karem.item ";
                
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sqll);
                
                rs = pst.executeQuery();
                
                while (rs.next()) {
                    
                    String name = rs.getString("code");
                    
                    cmcode.removeItem(name);
                }
            } catch (SQLException ex) {
            }
            try {
                String sql = "SELECT code  FROM karem.item where  section='"+sectionn+"' and code NOT IN \n" +
"(SELECT distinct codee FROM karem.repaireorder where section='"+sectionn+"' and statuss !='done' order by id DESC)";
                pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sql);
                rs = pst.executeQuery();
                while (rs.next()) {
                    String namee = rs.getString("code");
                    
                    cmcode.addItem(namee);
                    
                }
                
            } catch (SQLException ex) {
                
            }
        }
        }
        
    }//GEN-LAST:event_cmsectionActionPerformed

    private void partActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partActionPerformed
        afsha.setEnabled(true);
        afsha.setSelected(false);
        framel.setEnabled(true);
        framel.setSelected(false);
        mohrk.setEnabled(true);
        mohrk.setSelected(false);
        hydrolek.setEnabled(true);
        hydrolek.setSelected(false);
        khrba.setEnabled(true);
        khrba.setSelected(false);
        smkra.setEnabled(true);
        smkra.setSelected(false);
        dhanat.setEnabled(true);
        dhanat.setSelected(false);
        hwa.setEnabled(true);
        hwa.setSelected(false);
        redater.setEnabled(true);
        redater.setSelected(false);
        sroge.setEnabled(true);
        sroge.setSelected(false);
        zogag.setEnabled(true);
        filter.setSelected(false);
        filter.setEnabled(true);
        zogag.setSelected(false);
        fhs.setEnabled(true);
        fhs.setSelected(false);
        jkman.setEnabled(true);
        jkman.setSelected(false);
        zyot.setEnabled(true);
        zyot.setSelected(false);
        tshem.setEnabled(true);
        tshem.setSelected(false);
        wire.setEnabled(true);
        wire.setSelected(false);
        etarat.setEnabled(true);
        etarat.setSelected(false);
    }//GEN-LAST:event_partActionPerformed

    private void fullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullActionPerformed
        afsha.setEnabled(false);
        afsha.setSelected(false);
        framel.setEnabled(false);
        framel.setSelected(false);
        filter.setEnabled(false);
        filter.setSelected(false);
        mohrk.setEnabled(false);
        mohrk.setSelected(false);
        hydrolek.setEnabled(false);
        hydrolek.setSelected(false);
        khrba.setEnabled(false);
        khrba.setSelected(false);
        smkra.setEnabled(false);
        smkra.setSelected(false);
        dhanat.setEnabled(false);
        dhanat.setSelected(false);
        hwa.setEnabled(false);
        hwa.setSelected(false);
        redater.setEnabled(false);
        redater.setSelected(false);
        sroge.setEnabled(false);
        sroge.setSelected(false);
        zogag.setEnabled(false);
        zogag.setSelected(false);
        fhs.setEnabled(false);
        fhs.setSelected(false);
        jkman.setEnabled(false);
        jkman.setSelected(false);
        zyot.setEnabled(false);
        zyot.setSelected(false);
        tshem.setEnabled(false);
        tshem.setSelected(false);
        wire.setEnabled(false);
        wire.setSelected(false);
        etarat.setEnabled(false);
        etarat.setSelected(false);
    }//GEN-LAST:event_fullActionPerformed

    private void etaratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etaratActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etaratActionPerformed

    private void cmsectionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmsectionKeyPressed
        
    }//GEN-LAST:event_cmsectionKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox afsha;
    private javax.swing.JComboBox cmcode;
    private javax.swing.JComboBox cmsection;
    private javax.swing.JTextField code;
    private javax.swing.JLabel date1;
    private javax.swing.JTextArea details;
    private javax.swing.JCheckBox dhanat;
    private javax.swing.JCheckBox etarat;
    private javax.swing.JTextArea expected;
    private javax.swing.JCheckBox fhs;
    private javax.swing.JCheckBox filter;
    private javax.swing.JCheckBox framel;
    private javax.swing.JRadioButton full;
    private javax.swing.JTextField hour;
    private javax.swing.JCheckBox hwa;
    private javax.swing.JCheckBox hydrolek;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox jkman;
    private javax.swing.JCheckBox khrba;
    private javax.swing.JCheckBox mohrk;
    private javax.swing.JTextField name;
    private javax.swing.JRadioButton part;
    private javax.swing.JCheckBox redater;
    private javax.swing.JButton save;
    private javax.swing.JLabel serial;
    private javax.swing.JLabel serialid;
    private javax.swing.JCheckBox smkra;
    private javax.swing.JCheckBox sroge;
    private javax.swing.JCheckBox tshem;
    private javax.swing.JTextField typeee;
    private javax.swing.JCheckBox wire;
    private javax.swing.JCheckBox zogag;
    private javax.swing.JCheckBox zyot;
    // End of variables declaration//GEN-END:variables
public void clear() {
        code.setText("");        
        serialid.setText("");        
        typeee.setText("");
        
        cmcode.setSelectedIndex(0);
        part.setSelected(true);
        afsha.setEnabled(true);
        details.setText("");
        expected.setText("");
        hour.setText("");
        afsha.setSelected(false);
        framel.setEnabled(true);
        framel.setSelected(false);
        mohrk.setEnabled(true);
        mohrk.setSelected(false);
        hydrolek.setEnabled(true);
        hydrolek.setSelected(false);
        khrba.setEnabled(true);
        khrba.setSelected(false);
        filter.setEnabled(true);
        filter.setSelected(false);
        smkra.setEnabled(true);
        smkra.setSelected(false);
        dhanat.setEnabled(true);
        dhanat.setSelected(false);
        hwa.setEnabled(true);
        hwa.setSelected(false);
        redater.setEnabled(true);
        redater.setSelected(false);
        sroge.setEnabled(true);
        sroge.setSelected(false);
        zogag.setEnabled(true);
        zogag.setSelected(false);
        fhs.setEnabled(true);
        fhs.setSelected(false);
        jkman.setEnabled(true);
        jkman.setSelected(false);
        zyot.setEnabled(true);
        zyot.setSelected(false);
        tshem.setEnabled(true);
        tshem.setSelected(false);
        wire.setEnabled(true);
        wire.setSelected(false);
        etarat.setEnabled(true);
        etarat.setSelected(false);
        name.setText("");
    }

    public void auto_id() {
        String type1 = null;
        if (typeee.getText().equals("ورشة المعدات")) {
            type1 = "N";
        } else {
            type1 = "O";
        }
        String rnnoo = datee;
        String txto = rnnoo.substring(2, 4);
        String seriall = "R" + txto + type1 + "-";
        
        try {
            String sql = "SELECT seriall FROM karem.repaireorder where id=(select max(id)FROM karem.repaireorder )";
            pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                String rnno = rs.getString("seriall");
                int co = rnno.length();
                String txt = rnno.substring(0, 5);
                String num = rnno.substring(5, co);
                int n = Integer.parseInt(num);
                n++;
                String snum = Integer.toString(n);
                String ftxt = seriall + snum;
                serial.setText(ftxt);
            } else {
                serial.setText(seriall + "1001");
            }
        } catch (SQLException ex) {
            
        }
        
    }
    
    public void itemm() {
        try {
            String sql = "SELECT code  FROM karem.item where  section='"+sectionn+"' and code NOT IN \n" +
"(SELECT distinct codee FROM karem.repaireorder where section='"+sectionn+"' and statuss !='done' order by id DESC)";
            pst = (PreparedStatement) DBConnect.appcon.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                String namee = rs.getString("code");
                
                cmcode.addItem(namee);
                
            }
            
        } catch (SQLException ex) {
            
        }
    }

    public void comboxfromcombo() {
        cmsection.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent event) {
                JComboBox cmsupplier = (JComboBox) event.getSource();
                
                Object item = event.getItem();
                
            }
        });
        
    }
    
}
